{
  "stats": {
    "suites": 3,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2022-08-23T15:49:52.954Z",
    "end": "2022-08-23T15:49:53.208Z",
    "duration": 254,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "90df6c18-9098-406f-8661-34bcf47baeaf",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "607f186c-c656-4d34-947e-16f7a72cfb3c",
          "title": "[@searchByIdUser search data user]",
          "fullFile": "/Users/nuritaiswati/nuritatugasweek3/testcases/testcase-search-by-id-user.js",
          "file": "/testcases/testcase-search-by-id-user.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"[@searchByIdUser search data user]\"",
              "fullTitle": "[@searchByIdUser search data user] \"before all\" hook in \"[@searchByIdUser search data user]\"",
              "timedOut": false,
              "duration": 56,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseApi = await api.postUser(requestBodyPost);",
              "err": {},
              "uuid": "2706c8b4-118b-44ee-b973-73e55371d27d",
              "parentUUID": "607f186c-c656-4d34-947e-16f7a72cfb3c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"[@searchByIdUser search data user]\"",
              "fullTitle": "[@searchByIdUser search data user] \"after all\" hook in \"[@searchByIdUser search data user]\"",
              "timedOut": false,
              "duration": 21,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseApi = await api.removeAll();",
              "err": {},
              "uuid": "975dd10d-3542-48a0-8549-078585f51fa5",
              "parentUUID": "607f186c-c656-4d34-947e-16f7a72cfb3c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "[@searchByIdUser-positive1] search user menggunakan id yang valid",
              "fullTitle": "[@searchByIdUser search data user] [@searchByIdUser-positive1] search user menggunakan id yang valid",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// const id = \"3d9f72e4-94dc-47ee-ade7-4b8315939139\";\nlet responApi = await api.getUserById(responseApi._body.id);\nexpect(responApi.statusCode).to.equal(200);\nexpect(responApi.body.id).to.equal(responseApi._body.id);\nexpect(responApi.body).has.jsonSchema(jsonSchemaGetId);",
              "err": {},
              "uuid": "240c4d4d-3746-4ef2-ae93-8deafc0b38e5",
              "parentUUID": "607f186c-c656-4d34-947e-16f7a72cfb3c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@searchByIdUser-negative1] search user menggunakan id yang tidak ada diserver",
              "fullTitle": "[@searchByIdUser search data user] [@searchByIdUser-negative1] search user menggunakan id yang tidak ada diserver",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const Id = \"null\";\nlet responApi = await api.getUserById(Id);\nexpect(responApi.body.errorCode).to.equal(\"ER-01\");\nexpect(responApi.body.statusCode).to.equal(404);\nexpect(responApi.body.message).to.equal('user not found');",
              "err": {},
              "uuid": "e04310b2-c533-4429-a681-870eb177323b",
              "parentUUID": "607f186c-c656-4d34-947e-16f7a72cfb3c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "240c4d4d-3746-4ef2-ae93-8deafc0b38e5",
            "e04310b2-c533-4429-a681-870eb177323b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 44,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "44498ed7-47f1-4ef3-9839-d74b09602499",
          "title": "[@updateUser update data user]",
          "fullFile": "/Users/nuritaiswati/nuritatugasweek3/testcases/testcase-update-user-negative.js",
          "file": "/testcases/testcase-update-user-negative.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"[@updateUser update data user]\"",
              "fullTitle": "[@updateUser update data user] \"before all\" hook in \"[@updateUser update data user]\"",
              "timedOut": false,
              "duration": 17,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseApi = await api.postUser(requestBodyPost);",
              "err": {},
              "uuid": "afee0e26-c9c5-4182-8776-fd5ce3a16219",
              "parentUUID": "44498ed7-47f1-4ef3-9839-d74b09602499",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"[@updateUser update data user]\"",
              "fullTitle": "[@updateUser update data user] \"after all\" hook in \"[@updateUser update data user]\"",
              "timedOut": false,
              "duration": 10,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseApi = await api.removeAll();",
              "err": {},
              "uuid": "3b47eb14-607f-4837-ad82-5d7ee13fd676",
              "parentUUID": "44498ed7-47f1-4ef3-9839-d74b09602499",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "[@updateUser-negative1] user update data age=0 will return 400",
              "fullTitle": "[@updateUser update data user] [@updateUser-negative1] user update data age=0 will return 400",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const sendRequestPut = {\n  id: responseApi._body.id,\n  firstName: requestBodyPut.firstName,\n  lastName: requestBodyPut.lastName,\n  age: 0,\n  occupation: requestBodyPut.occupation,\n  nationality: requestBodyPut.nationality,\n  hobbies: requestBodyPut.hobbies,\n  gender: requestBodyPut.gender,\n  createdDate: requestBodyPut.createdDate,\n  updatedDate: requestBodyPut.updatedDate\n}\nresponseApi = await api.putUser(sendRequestPut);\nlet err = \"you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender\"\nlet errorCode = \"ER-03\";\nexpect(responseApi._body.statusCode).to.equal(400);\nexpect(responseApi.request._data.age).to.equal(0);\nexpect(responseApi._body.message).to.equal(err);\nexpect(responseApi._body.errorCode).to.equal(errorCode);",
              "err": {},
              "uuid": "8c86a25d-8250-4364-9770-64bde427a258",
              "parentUUID": "44498ed7-47f1-4ef3-9839-d74b09602499",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@updateUser-negative2] user update data hobbies=[] will return 400",
              "fullTitle": "[@updateUser update data user] [@updateUser-negative2] user update data hobbies=[] will return 400",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const sendRequestPut = {\n  id: responseApi._body.id,\n  firstName: requestBodyPut.firstName,\n  lastName: requestBodyPut.lastName,\n  age: requestBodyPut.age,\n  occupation: requestBodyPut.occupation,\n  nationality: requestBodyPut.nationality,\n  hobbies: [],\n  gender: requestBodyPut.gender,\n  createdDate: requestBodyPut.createdDate,\n  updatedDate: requestBodyPut.updatedDate\n}\nresponseApi = await api.putUser(sendRequestPut);\nlet err = 'you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender';\nlet errorCode = \"ER-03\";\nexpect(responseApi._body.statusCode).to.equal(400);\nexpect(responseApi.request._data.hobbies.length).to.equal(0);\nexpect(responseApi._body.message).to.be.equal(err);\nexpect(responseApi._body.errorCode).to.equal(errorCode);",
              "err": {},
              "uuid": "522d0780-1bd9-4482-b52d-b0ca92650743",
              "parentUUID": "44498ed7-47f1-4ef3-9839-d74b09602499",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@updateUser-negative3] user update data id=null will return 400",
              "fullTitle": "[@updateUser update data user] [@updateUser-negative3] user update data id=null will return 400",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const sendRequestPut = {\n  id: null,\n  firstName: requestBodyPut.firstName,\n  lastName: requestBodyPut.lastName,\n  age: requestBodyPut.age,\n  occupation: requestBodyPut.occupation,\n  nationality: requestBodyPut.nationality,\n  hobbies: requestBodyPut.hobbies,\n  gender: requestBodyPut.gender,\n  createdDate: requestBodyPut.createdDate,\n  updatedDate: requestBodyPut.updatedDate\n}\nresponseApi = await api.putUser(sendRequestPut);\nlet err = \"you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender\";\nlet errorCode = \"ER-03\";\nexpect(responseApi._body.statusCode).to.equal(400);\nexpect(responseApi.request._data.id).to.equal(null);\nexpect(responseApi._body.message).to.be.equal(err);\nexpect(responseApi._body.errorCode).to.equal(errorCode);",
              "err": {},
              "uuid": "a7ff76b7-d1e4-49b8-bd57-f4ab97af3d8c",
              "parentUUID": "44498ed7-47f1-4ef3-9839-d74b09602499",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8c86a25d-8250-4364-9770-64bde427a258",
            "522d0780-1bd9-4482-b52d-b0ca92650743",
            "a7ff76b7-d1e4-49b8-bd57-f4ab97af3d8c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 46,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aa704e0c-a4cf-4d6f-87de-ed9316d8b632",
          "title": "[@updateUser update data user]",
          "fullFile": "/Users/nuritaiswati/nuritatugasweek3/testcases/testcase-update-user-positive.js",
          "file": "/testcases/testcase-update-user-positive.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"[@updateUser update data user]\"",
              "fullTitle": "[@updateUser update data user] \"before all\" hook in \"[@updateUser update data user]\"",
              "timedOut": false,
              "duration": 7,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseApi = await api.postUser(requestBodyPost);",
              "err": {},
              "uuid": "a2d079e3-fbb1-4eab-9f10-2c8edad86279",
              "parentUUID": "aa704e0c-a4cf-4d6f-87de-ed9316d8b632",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"[@updateUser update data user]\"",
              "fullTitle": "[@updateUser update data user] \"after all\" hook in \"[@updateUser update data user]\"",
              "timedOut": false,
              "duration": 4,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseAPi = await api.removeAll();",
              "err": {},
              "uuid": "c55e32fe-d576-4446-a532-16b58f2fc81b",
              "parentUUID": "aa704e0c-a4cf-4d6f-87de-ed9316d8b632",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "[@updateUser-positive1] user update data Occupation dan Nationality will return 200",
              "fullTitle": "[@updateUser update data user] [@updateUser-positive1] user update data Occupation dan Nationality will return 200",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const sendRequestPut = {\n  id: responseApi._body.id,\n  firstName: \"kakek\",\n  lastName: \"nenek\",\n  age: 30,\n  occupation: \"software developer\",\n  nationality: \"singapore\",\n  hobbies: [\"reading book\"],\n  gender: \"MALE\",\n  createdDate: \"2022-08-10T08:08:36.019Z\",\n  updatedDate: \"2022-08-10T08:08:36.019Z\"\n}\nresponseApi = await api.putUser(sendRequestPut);\nexpect(responseApi.statusCode).to.equal(200);\nexpect(responseApi.request._data.occupation).to.equal(requestBodyPut.occupation);\nexpect(responseApi.request._data.nationality).to.equal(requestBodyPut.nationality);\nexpect(responseApi.body).has.jsonSchema(jsonSchemaPUT);",
              "err": {},
              "uuid": "bf7c0a45-1baf-4f20-b45b-1f9a236facd4",
              "parentUUID": "aa704e0c-a4cf-4d6f-87de-ed9316d8b632",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bf7c0a45-1baf-4f20-b45b-1f9a236facd4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}