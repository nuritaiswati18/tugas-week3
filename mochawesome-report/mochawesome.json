{
  "stats": {
    "suites": 3,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2022-08-17T06:22:23.571Z",
    "end": "2022-08-17T06:22:23.752Z",
    "duration": 181,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "634d6faa-b844-42ba-82e5-98dc9b7f1ec3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f63462a5-633a-4b03-b32a-7a7178baef99",
          "title": "[@searchByIdUser search data user]",
          "fullFile": "/Users/nuritaiswati/nuritatugasweek3/testcases/testcase-search-by-id-user.js",
          "file": "/testcases/testcase-search-by-id-user.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"[@searchByIdUser search data user]\"",
              "fullTitle": "[@searchByIdUser search data user] \"before all\" hook in \"[@searchByIdUser search data user]\"",
              "timedOut": false,
              "duration": 45,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseApi = await api.postUser(requestBodyPost);",
              "err": {},
              "uuid": "90d7aae0-5af2-4dd8-be4c-373aa42f47c2",
              "parentUUID": "f63462a5-633a-4b03-b32a-7a7178baef99",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"[@searchByIdUser search data user]\"",
              "fullTitle": "[@searchByIdUser search data user] \"after all\" hook in \"[@searchByIdUser search data user]\"",
              "timedOut": false,
              "duration": 8,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseApi = await api.removeAll();",
              "err": {},
              "uuid": "9ca0f112-5ec4-404b-996f-d1a92a660d42",
              "parentUUID": "f63462a5-633a-4b03-b32a-7a7178baef99",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "[@searchByIdUser-positive1] search user menggunakan id yang valid",
              "fullTitle": "[@searchByIdUser search data user] [@searchByIdUser-positive1] search user menggunakan id yang valid",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// const id = \"3d9f72e4-94dc-47ee-ade7-4b8315939139\";\nlet responApi = await api.getUserById(responseApi._body.id);\nexpect(responApi.statusCode).to.equal(200);\nexpect(responApi.body.id).to.equal(responseApi._body.id);\nexpect(responApi.body).has.jsonSchema(jsonSchemaGetId);",
              "err": {},
              "uuid": "dfbae057-d49e-4fde-a36e-b7050913bc75",
              "parentUUID": "f63462a5-633a-4b03-b32a-7a7178baef99",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@searchByIdUser-negative1] search user menggunakan id yang tidak ada diserver",
              "fullTitle": "[@searchByIdUser search data user] [@searchByIdUser-negative1] search user menggunakan id yang tidak ada diserver",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const Id = \"null\";\nlet responApi = await api.getUserById(Id);\nexpect(responApi.body.errorCode).to.equal(\"ER-01\");\nexpect(responApi.body.statusCode).to.equal(404);\nexpect(responApi.body.message).to.equal('user not found');",
              "err": {},
              "uuid": "746356b7-c6f8-4ccc-88d4-dd5d0bade463",
              "parentUUID": "f63462a5-633a-4b03-b32a-7a7178baef99",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dfbae057-d49e-4fde-a36e-b7050913bc75",
            "746356b7-c6f8-4ccc-88d4-dd5d0bade463"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9aeb7bac-b4f3-4a1f-b131-1dc86cbf80e5",
          "title": "[@updateUser update data user]",
          "fullFile": "/Users/nuritaiswati/nuritatugasweek3/testcases/testcase-update-user-negative.js",
          "file": "/testcases/testcase-update-user-negative.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"[@updateUser update data user]\"",
              "fullTitle": "[@updateUser update data user] \"before all\" hook in \"[@updateUser update data user]\"",
              "timedOut": false,
              "duration": 13,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseApi = await api.postUser(requestBodyPost);",
              "err": {},
              "uuid": "e37d54b6-b073-47fa-a344-da66a2df3166",
              "parentUUID": "9aeb7bac-b4f3-4a1f-b131-1dc86cbf80e5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"[@updateUser update data user]\"",
              "fullTitle": "[@updateUser update data user] \"after all\" hook in \"[@updateUser update data user]\"",
              "timedOut": false,
              "duration": 7,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseAPi = await api.removeAll();",
              "err": {},
              "uuid": "0be45761-400c-4a68-a0ca-db17ce62d9f2",
              "parentUUID": "9aeb7bac-b4f3-4a1f-b131-1dc86cbf80e5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "[@updateUser-negative1] user update data age=0 will return 400",
              "fullTitle": "[@updateUser update data user] [@updateUser-negative1] user update data age=0 will return 400",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let responseApi = await api.putUser(requestBodyPut);\nlet err = \"you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender\"\nlet errorCode = \"ER-03\";\nexpect(responseApi._body.statusCode).to.equal(400);\nexpect(responseApi.request._data.age).to.equal(0);\nexpect(responseApi._body.message).to.equal(err);\nexpect(responseApi._body.errorCode).to.equal(errorCode);",
              "err": {},
              "uuid": "85caafae-16d7-4431-94a0-4cddb82efc9f",
              "parentUUID": "9aeb7bac-b4f3-4a1f-b131-1dc86cbf80e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@updateUser-negative2] user update data hobbies=[] will return 400",
              "fullTitle": "[@updateUser update data user] [@updateUser-negative2] user update data hobbies=[] will return 400",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let responseApi = await api.putUser(requestBodyPut);\nlet err = 'you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender';\nlet errorCode = \"ER-03\";\nexpect(responseApi._body.statusCode).to.equal(400);\nexpect(responseApi.request._data.hobbies.length).to.equal(0);\nexpect(responseApi._body.message).to.be.equal(err);\nexpect(responseApi._body.errorCode).to.equal(errorCode);",
              "err": {},
              "uuid": "7c4dadcc-bf86-4213-9dc4-e7ffc7f71c56",
              "parentUUID": "9aeb7bac-b4f3-4a1f-b131-1dc86cbf80e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@updateUser-negative3] user update data id=null will return 400",
              "fullTitle": "[@updateUser update data user] [@updateUser-negative3] user update data id=null will return 400",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let responseApi = await api.putUser(requestBodyPut);\nlet err = \"you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender\";\nlet errorCode = \"ER-03\";\nexpect(responseApi._body.statusCode).to.equal(400);\nexpect(responseApi.request._data.id).to.equal(null);\nexpect(responseApi._body.message).to.be.equal(err);\nexpect(responseApi._body.errorCode).to.equal(errorCode);",
              "err": {},
              "uuid": "dfd6becc-75c9-4033-85ee-3cc7c65e2bed",
              "parentUUID": "9aeb7bac-b4f3-4a1f-b131-1dc86cbf80e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "85caafae-16d7-4431-94a0-4cddb82efc9f",
            "7c4dadcc-bf86-4213-9dc4-e7ffc7f71c56",
            "dfd6becc-75c9-4033-85ee-3cc7c65e2bed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 29,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0429b0b4-4308-4a8b-9a17-863bbd2ffce6",
          "title": "[@updateUser update data user]",
          "fullFile": "/Users/nuritaiswati/nuritatugasweek3/testcases/testcase-update-user-positive.js",
          "file": "/testcases/testcase-update-user-positive.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"[@updateUser update data user]\"",
              "fullTitle": "[@updateUser update data user] \"before all\" hook in \"[@updateUser update data user]\"",
              "timedOut": false,
              "duration": 17,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseApi = await api.postUser(requestBodyPost);",
              "err": {},
              "uuid": "e04396a2-3820-40fc-944d-956632e8e7da",
              "parentUUID": "0429b0b4-4308-4a8b-9a17-863bbd2ffce6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"[@updateUser update data user]\"",
              "fullTitle": "[@updateUser update data user] \"after all\" hook in \"[@updateUser update data user]\"",
              "timedOut": false,
              "duration": 8,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "responseAPi = await api.removeAll();",
              "err": {},
              "uuid": "2379b03b-c892-42f0-bbf7-135f6fa9929d",
              "parentUUID": "0429b0b4-4308-4a8b-9a17-863bbd2ffce6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "[@updateUser-positive1] user update data Occupation dan Nationality will return 200",
              "fullTitle": "[@updateUser update data user] [@updateUser-positive1] user update data Occupation dan Nationality will return 200",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const sendRequestPut = {\n  id: responseApi._body.id,\n  firstName: \"kakek\",\n  lastName: \"nenek\",\n  age: 30,\n  occupation: \"software developer\",\n  nationality: \"singapore\",\n  hobbies: [\"reading book\"],\n  gender: \"MALE\",\n  createdDate: \"2022-08-10T08:08:36.019Z\",\n  updatedDate: \"2022-08-10T08:08:36.019Z\"\n}\nresponseApi = await api.putUser(sendRequestPut);\nexpect(responseApi.statusCode).to.equal(200);\nexpect(responseApi.request._data.occupation).to.equal(requestBodyPut.occupation);\nexpect(responseApi.request._data.nationality).to.equal(requestBodyPut.nationality);\nexpect(responseApi.body).has.jsonSchema(jsonSchemaPUT);",
              "err": {},
              "uuid": "d6fa8db5-97dd-4d8b-b866-939ad909e582",
              "parentUUID": "0429b0b4-4308-4a8b-9a17-863bbd2ffce6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d6fa8db5-97dd-4d8b-b866-939ad909e582"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}