{
  "stats": {
    "suites": 3,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2022-08-11T15:26:09.240Z",
    "end": "2022-08-11T15:26:09.418Z",
    "duration": 178,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "54a342f0-93aa-4ae1-b9cd-bc4598cd82b4",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d297c340-12bf-412c-bcdb-3460efce741a",
          "title": "[@searchByIdUser search data user]",
          "fullFile": "/Users/nuritaiswati/nuritatugasweek3/testcases/testcase-search-by-id-user.js",
          "file": "/testcases/testcase-search-by-id-user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[@searchByIdUser-positive1] search user menggunakan id yang valid",
              "fullTitle": "[@searchByIdUser search data user] [@searchByIdUser-positive1] search user menggunakan id yang valid",
              "timedOut": false,
              "duration": 48,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = \"3d9f72e4-94dc-47ee-ade7-4b8315939139\";\nlet responApi = await api.getUserById(id);\nexpect(responApi.statusCode).to.equal(200);\nexpect(responApi.body.id).to.equal(id);\nexpect(responApi.body).has.jsonSchema(jsonSchemaGetId);",
              "err": {},
              "uuid": "656a06ae-fb6d-40dc-b972-a407f1e17145",
              "parentUUID": "d297c340-12bf-412c-bcdb-3460efce741a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@searchByIdUser-negative1] search user menggunakan id yang tidak ada diserver",
              "fullTitle": "[@searchByIdUser search data user] [@searchByIdUser-negative1] search user menggunakan id yang tidak ada diserver",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const Id = \"null\";\nlet responApi = await api.getUserById(Id);\nexpect(responApi.body.errorCode).to.equal(\"ER-01\");\nexpect(responApi.body.statusCode).to.equal(404);\nexpect(responApi.body.message).to.equal('user not found');",
              "err": {},
              "uuid": "651adc46-018a-43fb-8fd2-319ac4c42391",
              "parentUUID": "d297c340-12bf-412c-bcdb-3460efce741a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "656a06ae-fb6d-40dc-b972-a407f1e17145",
            "651adc46-018a-43fb-8fd2-319ac4c42391"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 59,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c4811613-5f88-4c92-a976-19ab3b153319",
          "title": "[@updateUser update data user]",
          "fullFile": "/Users/nuritaiswati/nuritatugasweek3/testcases/testcase-update-user-negative.js",
          "file": "/testcases/testcase-update-user-negative.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[@updateUser-negative1] user update data age=0 will return 400",
              "fullTitle": "[@updateUser update data user] [@updateUser-negative1] user update data age=0 will return 400",
              "timedOut": false,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let responseApi = await api.putUser(requestBodyPut);\nlet err = \"you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender\"\nlet errorCode = \"ER-03\";\nexpect(responseApi._body.statusCode).to.equal(400);\nexpect(responseApi.request._data.age).to.equal(0);\nexpect(responseApi._body.message).to.equal(err);\nexpect(responseApi._body.errorCode).to.equal(errorCode);",
              "err": {},
              "uuid": "635f4235-5dc8-4653-bbf5-8a01f48cc172",
              "parentUUID": "c4811613-5f88-4c92-a976-19ab3b153319",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@updateUser-negative2] user update data hobbies=[] will return 400",
              "fullTitle": "[@updateUser update data user] [@updateUser-negative2] user update data hobbies=[] will return 400",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let responseApi = await api.putUser(requestBodyPut);\nlet err = 'you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender';\nlet errorCode = \"ER-03\";\nexpect(responseApi._body.statusCode).to.equal(400);\nexpect(responseApi.request._data.hobbies.length).to.equal(0);\nexpect(responseApi._body.message).to.be.equal(err);\nexpect(responseApi._body.errorCode).to.equal(errorCode);",
              "err": {},
              "uuid": "57c72e7b-91c1-4ee8-857a-5900c1cc4d31",
              "parentUUID": "c4811613-5f88-4c92-a976-19ab3b153319",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@updateUser-negative3] user update data id=null will return 400",
              "fullTitle": "[@updateUser update data user] [@updateUser-negative3] user update data id=null will return 400",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let responseApi = await api.putUser(requestBodyPut);\nlet err = \"you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender\";\nlet errorCode = \"ER-03\";\nexpect(responseApi._body.statusCode).to.equal(400);\nexpect(responseApi.request._data.id).to.equal(null);\nexpect(responseApi._body.message).to.be.equal(err);\nexpect(responseApi._body.errorCode).to.equal(errorCode);",
              "err": {},
              "uuid": "6b0e1ba6-cfa0-4184-b557-3fdaf3f7e2e5",
              "parentUUID": "c4811613-5f88-4c92-a976-19ab3b153319",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "635f4235-5dc8-4653-bbf5-8a01f48cc172",
            "57c72e7b-91c1-4ee8-857a-5900c1cc4d31",
            "6b0e1ba6-cfa0-4184-b557-3fdaf3f7e2e5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 53,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "31a271d9-ea78-4ee8-8908-649d7d8f7ad2",
          "title": "[@updateUser update data user]",
          "fullFile": "/Users/nuritaiswati/nuritatugasweek3/testcases/testcase-update-user-positive.js",
          "file": "/testcases/testcase-update-user-positive.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[@updateUser-positive1] user update data Occupation dan Nationality will return 200",
              "fullTitle": "[@updateUser update data user] [@updateUser-positive1] user update data Occupation dan Nationality will return 200",
              "timedOut": false,
              "duration": 39,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let responseApi = await api.putUser(requestBodyPut);\nexpect(responseApi.statusCode).to.equal(200);\nexpect(responseApi.request._data.occupation).to.equal(requestBodyPut.occupation);\nexpect(responseApi.request._data.nationality).to.equal(requestBodyPut.nationality);\nexpect(responseApi.body).has.jsonSchema(jsonSchemaPUT);",
              "err": {},
              "uuid": "7e0ad441-56dc-4787-8009-f73e44af913c",
              "parentUUID": "31a271d9-ea78-4ee8-8908-649d7d8f7ad2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e0ad441-56dc-4787-8009-f73e44af913c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 39,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}